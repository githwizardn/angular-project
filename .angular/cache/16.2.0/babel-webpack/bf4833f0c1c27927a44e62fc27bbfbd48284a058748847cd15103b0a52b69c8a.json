{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet BookingFormComponent = class BookingFormComponent {\n  constructor(formBuilder, dummyApiService) {\n    this.formBuilder = formBuilder;\n    this.dummyApiService = dummyApiService;\n    this.displayResultMessage = false;\n    this.resultMessage = \"\";\n    this.reservationForm = this.formBuilder.group({\n      name: [\"\", [Validators.required, Validators.minLength(2), Validators.pattern('^[ა-ჰ ]+$')]],\n      lastname: [\"\", [Validators.required, Validators.minLength(2), Validators.pattern('^[ა-ჰ ]+$')]],\n      phone: [\"\", [Validators.required, Validators.pattern('^[0-9]{9}$')]],\n      email: [\"\", [Validators.required, Validators.email]],\n      date: [\"\", [Validators.required, this.validateDate]],\n      time: [\"\", [Validators.required, Validators.pattern('^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$')]]\n    });\n    this.reservationForm.valueChanges.subscribe(() => {\n      if (this.reservationForm.valid) {\n        this.resultMessage = \"\";\n        this.displayResultMessage = false;\n      }\n    });\n  }\n  submitForm() {\n    if (!this.reservationForm.valid) {\n      this.resultMessage = \"Please fill out all fields correctly.\";\n      this.displayResultMessage = true;\n    } else {\n      this.dummyApiService.submitForm(this.reservationForm.value).subscribe(response => {\n        this.resultMessage = \"Thank you for your reservation. We will contact you shortly.\";\n        this.displayResultMessage = true;\n        this.reservationForm.reset();\n        setTimeout(() => {\n          this.resultMessage = \"\";\n          this.displayResultMessage = false;\n        }, 5000);\n      }, error => {\n        this.resultMessage = \"An error occurred. Please try again.\";\n        this.displayResultMessage = true;\n      });\n    }\n  }\n  validateDate(control) {\n    const inputDate = new Date(control.value);\n    const currentDate = new Date();\n    if (inputDate <= currentDate) {\n      return {\n        'invalidDate': true\n      };\n    }\n    return null;\n  }\n};\nBookingFormComponent = __decorate([Component({\n  selector: 'booking-form',\n  templateUrl: './booking-form.component.html',\n  styleUrls: ['../app.component.css', './booking-form.component.css']\n})], BookingFormComponent);\nexport { BookingFormComponent };","map":{"version":3,"names":["Component","Validators","BookingFormComponent","constructor","formBuilder","dummyApiService","displayResultMessage","resultMessage","reservationForm","group","name","required","minLength","pattern","lastname","phone","email","date","validateDate","time","valueChanges","subscribe","valid","submitForm","value","response","reset","setTimeout","error","control","inputDate","Date","currentDate","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\N\\Desktop\\angular-project\\src\\app\\booking-form\\booking-form.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { DummyApiService } from '../services/dummy-api.service';\r\n\r\n@Component({\r\n  selector: 'booking-form',\r\n  templateUrl: './booking-form.component.html',\r\n  styleUrls: ['../app.component.css', './booking-form.component.css'],\r\n})\r\nexport class BookingFormComponent {\r\n  reservationForm: FormGroup;\r\n  displayResultMessage: boolean = false;\r\n  resultMessage: string = \"\";\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private dummyApiService: DummyApiService,\r\n  ) {\r\n    this.reservationForm = this.formBuilder.group({\r\n      name: [\"\", [Validators.required, Validators.minLength(2), Validators.pattern('^[ა-ჰ ]+$')]],\r\n      lastname: [\"\", [Validators.required, Validators.minLength(2), Validators.pattern('^[ა-ჰ ]+$')]],\r\n      phone: [\"\", [Validators.required, Validators.pattern('^[0-9]{9}$')]],\r\n      email: [\"\", [Validators.required, Validators.email]],\r\n      date: [\"\", [Validators.required, this.validateDate]],\r\n      time: [\"\", [Validators.required, Validators.pattern('^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$')]],\r\n    });\r\n\r\n    this.reservationForm.valueChanges.subscribe(() => {\r\n      if (this.reservationForm.valid) {\r\n        this.resultMessage = \"\";\r\n        this.displayResultMessage = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  submitForm() {\r\n    if (!this.reservationForm.valid) {\r\n      this.resultMessage = \"Please fill out all fields correctly.\";\r\n      this.displayResultMessage = true;\r\n    } else {\r\n      this.dummyApiService.submitForm(this.reservationForm.value)\r\n        .subscribe(\r\n          response => {\r\n            this.resultMessage = \"Thank you for your reservation. We will contact you shortly.\";\r\n            this.displayResultMessage = true;\r\n            this.reservationForm.reset();\r\n\r\n            setTimeout(() => {\r\n              this.resultMessage = \"\";\r\n              this.displayResultMessage = false;\r\n            }, 5000);\r\n          },\r\n          error => {\r\n            this.resultMessage = \"An error occurred. Please try again.\";\r\n            this.displayResultMessage = true;\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  validateDate(control: any) {\r\n    const inputDate = new Date(control.value);\r\n    const currentDate = new Date();\r\n    if (inputDate <= currentDate) {\r\n      return { 'invalidDate': true };\r\n    }\r\n    return null;\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}