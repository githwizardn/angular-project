{"ast":null,"code":"var _class;\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DummyApiService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://dummyjson.com'; // Base URL of your API\n    this.token = 'YOUR_TOKEN_HERE'; // Replace with your actual token\n  }\n\n  getHeaders() {\n    return new HttpHeaders({\n      'Authorization': `Bearer ${this.token}`,\n      'Content-Type': 'application/json'\n    });\n  }\n  getData(resource) {\n    return this.http.get(`${this.apiUrl}/${resource}`, {\n      headers: this.getHeaders()\n    });\n  }\n  submitForm(data) {\n    return this.http.post(`${this.apiUrl}/auth/RESOURCE`, data, {\n      headers: this.getHeaders()\n    });\n  }\n  updateData(resource, id, newData) {\n    return this.http.put(`${this.apiUrl}/${resource}/${id}`, newData, {\n      headers: this.getHeaders()\n    });\n  }\n  deleteData(resource, id) {\n    return this.http.delete(`${this.apiUrl}/${resource}/${id}`, {\n      headers: this.getHeaders()\n    });\n  }\n}\n_class = DummyApiService;\n_class.ɵfac = function DummyApiService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["HttpHeaders","DummyApiService","constructor","http","apiUrl","token","getHeaders","getData","resource","get","headers","submitForm","data","post","updateData","id","newData","put","deleteData","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\N\\Desktop\\angular-project\\src\\app\\services\\dummy-api.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DummyApiService {\r\n  private apiUrl = 'https://dummyjson.com'; // Base URL of your API\r\n  private token = 'YOUR_TOKEN_HERE'; // Replace with your actual token\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  private getHeaders(): HttpHeaders {\r\n    return new HttpHeaders({\r\n      'Authorization': `Bearer ${this.token}`,\r\n      'Content-Type': 'application/json'\r\n    });\r\n  }\r\n\r\n  getData(resource: string): Observable<any> {\r\n    return this.http.get<any>(`${this.apiUrl}/${resource}`, { headers: this.getHeaders() });\r\n  }\r\n\r\n  submitForm(data: any): Observable<any> {\r\n    return this.http.post<any>(`${this.apiUrl}/auth/RESOURCE`, data, { headers: this.getHeaders() });\r\n  }\r\n\r\n  updateData(resource: string, id: number, newData: any): Observable<any> {\r\n    return this.http.put<any>(`${this.apiUrl}/${resource}/${id}`, newData, { headers: this.getHeaders() });\r\n  }\r\n\r\n  deleteData(resource: string, id: number): Observable<any> {\r\n    return this.http.delete<any>(`${this.apiUrl}/${resource}/${id}`, { headers: this.getHeaders() });\r\n  }\r\n\r\n  // Additional methods as needed\r\n}\r\n"],"mappings":";AACA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAM9D,OAAM,MAAOC,eAAe;EAI1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAHhB,KAAAC,MAAM,GAAG,uBAAuB,CAAC,CAAC;IAClC,KAAAC,KAAK,GAAG,iBAAiB,CAAC,CAAC;EAEK;;EAEhCC,UAAUA,CAAA;IAChB,OAAO,IAAIN,WAAW,CAAC;MACrB,eAAe,EAAE,UAAU,IAAI,CAACK,KAAK,EAAE;MACvC,cAAc,EAAE;KACjB,CAAC;EACJ;EAEAE,OAAOA,CAACC,QAAgB;IACtB,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAM,GAAG,IAAI,CAACL,MAAM,IAAII,QAAQ,EAAE,EAAE;MAAEE,OAAO,EAAE,IAAI,CAACJ,UAAU;IAAE,CAAE,CAAC;EACzF;EAEAK,UAAUA,CAACC,IAAS;IAClB,OAAO,IAAI,CAACT,IAAI,CAACU,IAAI,CAAM,GAAG,IAAI,CAACT,MAAM,gBAAgB,EAAEQ,IAAI,EAAE;MAAEF,OAAO,EAAE,IAAI,CAACJ,UAAU;IAAE,CAAE,CAAC;EAClG;EAEAQ,UAAUA,CAACN,QAAgB,EAAEO,EAAU,EAAEC,OAAY;IACnD,OAAO,IAAI,CAACb,IAAI,CAACc,GAAG,CAAM,GAAG,IAAI,CAACb,MAAM,IAAII,QAAQ,IAAIO,EAAE,EAAE,EAAEC,OAAO,EAAE;MAAEN,OAAO,EAAE,IAAI,CAACJ,UAAU;IAAE,CAAE,CAAC;EACxG;EAEAY,UAAUA,CAACV,QAAgB,EAAEO,EAAU;IACrC,OAAO,IAAI,CAACZ,IAAI,CAACgB,MAAM,CAAM,GAAG,IAAI,CAACf,MAAM,IAAII,QAAQ,IAAIO,EAAE,EAAE,EAAE;MAAEL,OAAO,EAAE,IAAI,CAACJ,UAAU;IAAE,CAAE,CAAC;EAClG;;SA3BWL,eAAe;;mBAAfA,MAAe,EAAAmB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAftB,MAAe;EAAAuB,OAAA,EAAfvB,MAAe,CAAAwB,IAAA;EAAAC,UAAA,EAFd;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}